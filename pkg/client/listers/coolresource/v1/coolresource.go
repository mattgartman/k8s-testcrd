/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/mattgartman/k8s-testcrd/pkg/apis/coolresource/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CoolResourceLister helps list CoolResources.
type CoolResourceLister interface {
	// List lists all CoolResources in the indexer.
	List(selector labels.Selector) (ret []*v1.CoolResource, err error)
	// CoolResources returns an object that can list and get CoolResources.
	CoolResources(namespace string) CoolResourceNamespaceLister
	CoolResourceListerExpansion
}

// coolResourceLister implements the CoolResourceLister interface.
type coolResourceLister struct {
	indexer cache.Indexer
}

// NewCoolResourceLister returns a new CoolResourceLister.
func NewCoolResourceLister(indexer cache.Indexer) CoolResourceLister {
	return &coolResourceLister{indexer: indexer}
}

// List lists all CoolResources in the indexer.
func (s *coolResourceLister) List(selector labels.Selector) (ret []*v1.CoolResource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.CoolResource))
	})
	return ret, err
}

// CoolResources returns an object that can list and get CoolResources.
func (s *coolResourceLister) CoolResources(namespace string) CoolResourceNamespaceLister {
	return coolResourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CoolResourceNamespaceLister helps list and get CoolResources.
type CoolResourceNamespaceLister interface {
	// List lists all CoolResources in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.CoolResource, err error)
	// Get retrieves the CoolResource from the indexer for a given namespace and name.
	Get(name string) (*v1.CoolResource, error)
	CoolResourceNamespaceListerExpansion
}

// coolResourceNamespaceLister implements the CoolResourceNamespaceLister
// interface.
type coolResourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CoolResources in the indexer for a given namespace.
func (s coolResourceNamespaceLister) List(selector labels.Selector) (ret []*v1.CoolResource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.CoolResource))
	})
	return ret, err
}

// Get retrieves the CoolResource from the indexer for a given namespace and name.
func (s coolResourceNamespaceLister) Get(name string) (*v1.CoolResource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("coolresource"), name)
	}
	return obj.(*v1.CoolResource), nil
}
